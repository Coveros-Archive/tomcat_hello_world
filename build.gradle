buildscript {
    repositories {
    	jcenter()
    	maven {
        	url "http://ec2-54-210-118-101.compute-1.amazonaws.com:8081/nexus/content/groups/public/"
    	}
    }

    dependencies {
    	classpath 'org.spockframework:spock-core:1.0-groovy-2.3'
    	classpath 'com.netflix.nebula:gradle-ospackage-plugin:2.0.2'
    	classpath 'com.bmuschko:gradle-nexus-plugin:2.3.1'
    }
}

apply plugin: 'java'

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.11'
}


apply plugin: "jacoco"
apply plugin: 'war'
apply plugin: 'nebula.rpm'
//apply plugin: 'maven-publish'
apply plugin: 'pmd'
apply plugin: "findbugs"
apply plugin: 'checkstyle'
apply plugin: "sonar-runner"

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
    }
}

//testing git push hook 2

// JDK version source compatibility
sourceCompatibility = 1.8
// project version
version = '1.0.2'
// War file name
war.baseName = 'hello-world'
// Web directory, this overrides the default value "webapp"
// project.webAppDirName = 'WebContent'

// Set source directory
/*sourceSets {
        main {
            java {
                srcDir 'src'
            }
        }
    }*/

task app1Rpm(type: Rpm) {
    packageName 'hello-world'
    version '1.0.2'
    arch I386
    os LINUX
    into ('/usr/share/tomcat/webapps/') {
//      into ('/var/lib/tomcat/webapps') {
        addParentDirs = false
    from (war.outputs.files) {
            addParentDirs = false
        }
    }
}

//UPLOAD ARCHIVES STUFF USE THIS OR MAVEN STUFF
artifacts {
    archives app1Rpm
}
//new comment
uploadArchives {
    repositories {
        maven {
        	credentials {
                username "admin"
                password "admin123"
            }
        	
            // change to point to your repo, e.g. http://my.org/repo
            url "http://ec2-54-210-118-101.compute-1.amazonaws.com:8081/nexus/content/repositories/snapshots"
    	}
    }
}

/*
 modifyPom {
     project {
         name 'Tomcat HelloWorld'
         description 'Hello World app for Tomcat'
         url 'https://github.com/Coveros/tomcat_hello_world'
         inceptionYear '2015'

         scm {
             url 'https://github.com/Coveros/tomcat_hello_world'
         }

         developers {
             developer {
                 id 'devin909'
                 name 'Devin Lee'
                 email 'devin.lee@coveros.com'
             }
         }
     }
 }

 extraArchive {
     sources = false
     tests = true
     javadoc = false
 }
 nexus {
     sign = true
     repositoryUrl = 'http://ec2-54-208-196-52.compute-1.amazonaws.com:8081/nexus/content/repositories/'
     snapshotRepositoryUrl = 'http://ec2-54-208-196-52.compute-1.amazonaws.com:8081/nexus/content/repositories/snapshots/'
 }*/
 
 


//MAVEN PUBLISH STUFF
/*publishing {
    publications {
        helloWorld(MavenPublication) {
        	groupId 'com.coveros'
            artifactId 'hello-world-sample-random-gen-rpm'
            version '1.0.2-SNAPSHOT'
            
            //from components.web
            artifact (app1Rpm) {
                classifier "rpm"
                extension "rpm"
            }
        }
    }
}
publishing {
	repositories {
        maven {
        	credentials {
                username "admin"
                password "admin123"
            }
        	
            // change to point to your repo, e.g. http://my.org/repo
            url "http://ec2-54-210-118-101.compute-1.amazonaws.com:8081/nexus/content/repositories/snapshots/"
        }
    }
}*/
pmd {
  ignoreFailures = true
  //sourceSets = ['src/main', 'src/test']
  reportsDir = file("$project.buildDir/reports/pmd")
  ruleSets = [
    "java-basic", 
    "java-braces",
    "java-comments"
  ]
}

sonarRunner {
    sonarProperties {
        property "sonar.host.url", "http://ec2-54-210-118-101.compute-1.amazonaws.com:9000"
        property "sonar.username", "admin"
        property "sonar.password", "admin"
        property "sonar.jdbc.url", "jdbc:mysql://ec2-54-210-118-101.compute-1.amazonaws.com:3306/sonar?useUnicode=true&characterEncoding=utf8&rewriteBatchedStatements=true&useConfigs=maxPerformance"
        property "sonar.jdbc.driverClassName", "com.mysql.jdbc.Driver"
        property "sonar.jdbc.username", "sonarqube"
        property "sonar.jdbc.password", "coveros1"
        property "sonar.java.source", "1.8"
    }
}
